{
  "name": "composable-value-objects",
  "version": "0.0.12",
  "description": "Allows one to define immutable ValueObjects with validation that can be composed of each other.",
  "main": "src/value-object.js",
  "scripts": {
    "test": "babel-tape-runner test/{,**/}*.js | tap-spec",
    "lint": "eslint src/* -c .eslintrc && eslint test/* -c test/.eslintrc || true",
    "cover": "istanbul cover tape -- test/{,**/}*.js | tap-spec",
    "postinstall": "node -e \"var s='../src',d='node_modules/src',fs=require('fs');fs.exists(d,function(e){e||fs.symlinkSync(s,d,'dir')});\""
  },
  "repository": {
    "type": "git",
    "url": "http://www.github.com/RayBenefield/composable-value-objects"
  },
  "keywords": [
    "value",
    "object",
    "composite",
    "pattern",
    "design",
    "composable",
    "immutable",
    "vo"
  ],
  "author": "Raymond Benefield",
  "license": "MIT",
  "dependencies": {
    "clone": "^2.0.0",
    "underscore": "^1.8.3"
  },
  "devDependencies": {
    "babel-cli": "^6.16.0",
    "babel-core": "^6.17.0",
    "babel-preset-es2015": "^6.16.0",
    "babel-preset-stage-0": "^6.16.0",
    "babel-tape-runner": "^2.0.1",
    "coveralls": "^2.11.14",
    "eslint": "^4.18.2",
    "eslint-config-airbnb": "^12.0.0",
    "eslint-config-airbnb-base": "^8.0.0",
    "eslint-plugin-import": "^2.0.0",
    "eslint-plugin-jsx-a11y": "^2.2.2",
    "eslint-plugin-react": "^6.3.0",
    "istanbul": "^0.4.5",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.0",
    "tape-bdd": "0.0.1"
  }
}
